[{"/home/ed/code/jababira/src/index.tsx":"1","/home/ed/code/jababira/src/reportWebVitals.js":"2","/home/ed/code/jababira/src/App.tsx":"3","/home/ed/code/jababira/src/components/NewPlayer.tsx":"4","/home/ed/code/jababira/src/generated/types.tsx":"5","/home/ed/code/jababira/src/components/AttributeSelector.tsx":"6","/home/ed/code/jababira/src/setupApollo.ts":"7","/home/ed/code/jababira/src/components/PlayerList.tsx":"8","/home/ed/code/jababira/src/models/Player.ts":"9","/home/ed/code/jababira/src/components/SquadMaker.tsx":"10","/home/ed/code/jababira/src/components/Team.tsx":"11","/home/ed/code/jababira/src/components/MatchMaker.tsx":"12","/home/ed/code/jababira/src/components/Card.tsx":"13"},{"size":654,"mtime":1611155472981,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611081720670,"results":"16","hashOfConfig":"15"},{"size":3348,"mtime":1612694019834,"results":"17","hashOfConfig":"15"},{"size":5189,"mtime":1611198851291,"results":"18","hashOfConfig":"15"},{"size":10132,"mtime":1612693672624,"results":"19","hashOfConfig":"15"},{"size":642,"mtime":1611187300536,"results":"20","hashOfConfig":"15"},{"size":564,"mtime":1611155506901,"results":"21","hashOfConfig":"15"},{"size":654,"mtime":1611201192059,"results":"22","hashOfConfig":"15"},{"size":132,"mtime":1611183523423,"results":"23","hashOfConfig":"15"},{"size":1502,"mtime":1612695785701,"results":"24","hashOfConfig":"15"},{"size":1556,"mtime":1611200504812,"results":"25","hashOfConfig":"15"},{"size":2335,"mtime":1612695926604,"results":"26","hashOfConfig":"15"},{"size":435,"mtime":1612686974551,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ktdsvd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/ed/code/jababira/src/index.tsx",[],["58","59"],"/home/ed/code/jababira/src/reportWebVitals.js",[],["60","61"],"/home/ed/code/jababira/src/App.tsx",["62","63"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { PlayerEditor } from './components/NewPlayer';\nimport { Player, useGetLookupsQuery, useGetPlayersQuery } from './generated/types';\nimport { PlayerList } from './components/PlayerList';\nimport { SquadMaker } from './components/SquadMaker';\nimport { MatchMaker } from './components/MatchMaker';\nimport { Card } from './components/Card';\n\nexport type PlayerFull = Player & { isFree:boolean }   \n\nexport const App = () => {\n\n  const [isCreatingPlayer, setIsCreatingPlayer] = useState<boolean>(false);\n  const [isMakingTeams, setIsMakingTeams] = useState<boolean>(false);\n  const [showControls, setShowControls] = useState<boolean>(true);\n  const [showNewMatch, setShowNewMatch] = useState<boolean>(false);\n  const [black, setBlack] = useState<Array<Player>>([])\n  const [white, setWhite] = useState<Array<Player>>([])\n  const [player, setPlayer] = useState<Player>();\n  const [players, setPlayers] = useState<Array<PlayerFull>>([])\n  const lookups = useGetLookupsQuery()   \n  const { data } = useGetPlayersQuery() \n  \n  useEffect(() => {\n    if (data && data.players) {\n      const players:Array<PlayerFull> = data.players.map( it => ({...it, isFree:true}))   \n      setPlayers(players)\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (player) {\n      setIsCreatingPlayer(true)\n    }\n\n  }, [player])\n\n  const createPlayer = () => {\n    setIsCreatingPlayer(true)\n    setShowControls(false)\n  } \n  const makeTeams =  () => {\n    setIsMakingTeams(true)\n    setShowControls(false)\n  }\n\n  const createMatch = () => {\n    setShowNewMatch(true)\n  } \n\n  const togglePlayer =  (player:PlayerFull) => {\n    if (data && data.players) {\n      const isInBlack = black.find(it => it.id === player.id)  \n      const isInWhite = white.find(it => it.id === player.id)  \n      if (!isInBlack && !isInWhite) {\n        setBlack([...black, player])\n        const _players = players.filter(it => it.id !== player.id)   \n        player.isFree = false\n        setPlayers([..._players, player ])\n      }\n      else if (isInBlack) {\n        setBlack(black.filter(it => it.id !== player.id))\n        setWhite([...white, player])\n      } else {\n        setWhite(white.filter(it => it.id !== player.id))\n        const _players = players.filter(it => it.id !== player.id)   \n        player.isFree = true\n        setPlayers([..._players, player ])\n      } \n    }\n  }\n\n  return <div id =\"app\" className=\"grid\">\n    <header>Jababira</header>\n    <section id=\"sidebar\">\n      {data?.players && <PlayerList showPlayer={setPlayer} players={players} togglePlayer={togglePlayer} ></PlayerList>}\n    </section>\n    <section id=\"main\">\n      {showControls && <div id=\"main-controls\">\n        <button onClick={() => createPlayer()}>New Player</button>\n        <button onClick={() => createMatch()}>New Match</button>\n        <button onClick={() => makeTeams()}>Make Teams</button>\n      </div>}\n      <div id=\"main-section\">\n          {isCreatingPlayer && <PlayerEditor existingPlayer={player} onClose={setIsCreatingPlayer}  ></PlayerEditor>}\n          {/* {isMakingTeams && <SquadMaker black={black} white={white}></SquadMaker>} */}\n          {showNewMatch && <Card header=\"New Match\">\n            <MatchMaker lookupsData={lookups.data}></MatchMaker>\n            </Card> }\n      </div>\n    </section>\n  </div>\n}\n\n","/home/ed/code/jababira/src/components/NewPlayer.tsx",[],"/home/ed/code/jababira/src/generated/types.tsx",[],"/home/ed/code/jababira/src/components/AttributeSelector.tsx",[],"/home/ed/code/jababira/src/setupApollo.ts",[],"/home/ed/code/jababira/src/components/PlayerList.tsx",[],"/home/ed/code/jababira/src/models/Player.ts",[],"/home/ed/code/jababira/src/components/SquadMaker.tsx",["64","65"],"/home/ed/code/jababira/src/components/Team.tsx",[],["66","67"],"/home/ed/code/jababira/src/components/MatchMaker.tsx",["68","69"],"/home/ed/code/jababira/src/components/Card.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":20},{"ruleId":"74","severity":1,"message":"78","line":15,"column":10,"nodeType":"76","messageId":"77","endLine":15,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":33,"column":20,"nodeType":"81","messageId":"82","endLine":33,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":39,"column":20,"nodeType":"81","messageId":"82","endLine":39,"endColumn":22},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","severity":1,"message":"85","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":17},{"ruleId":"74","severity":1,"message":"86","line":11,"column":18,"nodeType":"76","messageId":"77","endLine":11,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'SquadMaker' is defined but never used.","Identifier","unusedVar","'isMakingTeams' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["87"],["88"],"'match' is assigned a value but never used.","'setMatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
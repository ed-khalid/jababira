[{"/home/ed/code/jababira/src/index.tsx":"1","/home/ed/code/jababira/src/reportWebVitals.js":"2","/home/ed/code/jababira/src/App.tsx":"3","/home/ed/code/jababira/src/components/NewPlayer.tsx":"4","/home/ed/code/jababira/src/generated/types.tsx":"5","/home/ed/code/jababira/src/components/AttributeSelector.tsx":"6","/home/ed/code/jababira/src/setupApollo.ts":"7","/home/ed/code/jababira/src/components/PlayerList.tsx":"8","/home/ed/code/jababira/src/models/Player.ts":"9","/home/ed/code/jababira/src/components/SquadMaker.tsx":"10","/home/ed/code/jababira/src/components/Team.tsx":"11","/home/ed/code/jababira/src/components/PlayerPicker.tsx":"12","/home/ed/code/jababira/src/components/MatchMaker/MatchMaker.tsx":"13","/home/ed/code/jababira/src/components/MatchMaker/MatchMakerCard.tsx":"14","/home/ed/code/jababira/src/components/Common/Card.tsx":"15","/home/ed/code/jababira/src/components/Common/Dropzone.tsx":"16","/home/ed/code/jababira/src/components/Common/Slider.tsx":"17","/home/ed/code/jababira/src/models/mappers.ts":"18"},{"size":654,"mtime":1611155472981,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611081720670,"results":"21","hashOfConfig":"20"},{"size":3415,"mtime":1613292736635,"results":"22","hashOfConfig":"20"},{"size":5195,"mtime":1613298410563,"results":"23","hashOfConfig":"20"},{"size":12765,"mtime":1613298353915,"results":"24","hashOfConfig":"20"},{"size":642,"mtime":1611187300536,"results":"25","hashOfConfig":"20"},{"size":564,"mtime":1611155506901,"results":"26","hashOfConfig":"20"},{"size":654,"mtime":1611201192059,"results":"27","hashOfConfig":"20"},{"size":169,"mtime":1613288737480,"results":"28","hashOfConfig":"20"},{"size":7023,"mtime":1613301212733,"results":"29","hashOfConfig":"20"},{"size":1556,"mtime":1611200504812,"results":"30","hashOfConfig":"20"},{"size":797,"mtime":1613024936827,"results":"31","hashOfConfig":"20"},{"size":2477,"mtime":1613300530611,"results":"32","hashOfConfig":"20"},{"size":3217,"mtime":1613300793334,"results":"33","hashOfConfig":"20"},{"size":435,"mtime":1613298614487,"results":"34","hashOfConfig":"20"},{"size":681,"mtime":1613298617531,"results":"35","hashOfConfig":"20"},{"size":436,"mtime":1613298622097,"results":"36","hashOfConfig":"20"},{"size":692,"mtime":1613301212733,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ktdsvd",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ed/code/jababira/src/index.tsx",[],["79","80"],"/home/ed/code/jababira/src/reportWebVitals.js",[],["81","82"],"/home/ed/code/jababira/src/App.tsx",["83"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { PlayerEditor } from './components/NewPlayer';\nimport { Player, Position, useGetLookupsQuery, useGetPlayersQuery } from './generated/types';\nimport { PlayerList } from './components/PlayerList';\nimport { MatchMaker } from './components/MatchMaker/MatchMaker';\n\nexport type PlayerFull = Player & { isFree:boolean }   \n\nexport const App = () => {\n\n  const positions = [Position.Gk, Position.Def, Position.Mid, Position.Fw] \n  const [isCreatingPlayer, setIsCreatingPlayer] = useState<boolean>(false);\n  const [isMakingTeams, setIsMakingTeams] = useState<boolean>(false);\n  const [showControls, setShowControls] = useState<boolean>(true);\n  const [showNewMatch, setShowNewMatch] = useState<boolean>(false);\n  const [black, setBlack] = useState<Array<Player>>([])\n  const [white, setWhite] = useState<Array<Player>>([])\n  const [player, setPlayer] = useState<Player>();\n  const [allPlayers, setAllPlayers] = useState<Array<PlayerFull>>([])\n  const lookups = useGetLookupsQuery()   \n  const { data } = useGetPlayersQuery() \n  \n  useEffect(() => {\n    if (data && data.players) {\n      const players:Array<PlayerFull> = data.players.map( it => ({...it, isFree:true}))   \n      setAllPlayers(players)\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (player) {\n      setIsCreatingPlayer(true)\n    }\n\n  }, [player])\n\n  const createPlayer = () => {\n    setIsCreatingPlayer(true)\n    setShowControls(false)\n  } \n  const makeTeams =  () => {\n    setIsMakingTeams(true)\n    setShowControls(false)\n  }\n\n  const createMatch = () => {\n    setShowNewMatch(true)\n  } \n\n  const togglePlayer =  (player:PlayerFull) => {\n    if (data && data.players) {\n      const isInBlack = black.find(it => it.id === player.id)  \n      const isInWhite = white.find(it => it.id === player.id)  \n      if (!isInBlack && !isInWhite) {\n        setBlack([...black, player])\n        const _players = allPlayers.filter(it => it.id !== player.id)   \n        player.isFree = false\n        setAllPlayers([..._players, player ])\n      }\n      else if (isInBlack) {\n        setBlack(black.filter(it => it.id !== player.id))\n        setWhite([...white, player])\n      } else {\n        setWhite(white.filter(it => it.id !== player.id))\n        const _players = allPlayers.filter(it => it.id !== player.id)   \n        player.isFree = true\n        setAllPlayers([..._players, player ])\n      } \n    }\n  }\n\n\n  return <div id =\"app\" className=\"grid\">\n    <header>Jababira</header>\n    <section id=\"sidebar\">\n      {data?.players && <PlayerList showPlayer={setPlayer} players={allPlayers} togglePlayer={togglePlayer} ></PlayerList>}\n    </section>\n    <section id=\"main\">\n      {showControls && <div id=\"main-controls\">\n        <button onClick={() => createPlayer()}>New Player</button>\n        <button onClick={() => createMatch()}>New Match</button>\n        <button onClick={() => makeTeams()}>Make Teams</button>\n      </div>}\n      <div id=\"main-section\">\n          {isCreatingPlayer && <PlayerEditor existingPlayer={player} onClose={setIsCreatingPlayer}  ></PlayerEditor>}\n          {/* {isMakingTeams && <SquadMaker black={black} white={white}></SquadMaker>} */}\n          {showNewMatch && \n            <MatchMaker positions={positions} allPlayers={allPlayers} setAllPlayers={setAllPlayers} lookupsData={lookups.data}></MatchMaker>\n          }\n      </div>\n    </section>\n  </div>\n}\n\n","/home/ed/code/jababira/src/components/NewPlayer.tsx",[],"/home/ed/code/jababira/src/generated/types.tsx",[],"/home/ed/code/jababira/src/components/AttributeSelector.tsx",[],"/home/ed/code/jababira/src/setupApollo.ts",[],"/home/ed/code/jababira/src/components/PlayerList.tsx",[],"/home/ed/code/jababira/src/models/Player.ts",[],"/home/ed/code/jababira/src/components/SquadMaker.tsx",[],"/home/ed/code/jababira/src/components/Team.tsx",[],["84","85"],"/home/ed/code/jababira/src/components/PlayerPicker.tsx",["86","87","88","89"],"import { Dispatch, SetStateAction } from 'react'\nimport { PlayerFull } from '../App'\nimport { Player, Position, Squad, SquadPlayer } from '../generated/types'\nimport './PlayerPicker.css'\n\ninterface Props {\n    allPlayers:Array<PlayerFull>\n    setPlayerBeingDragged:Dispatch<SetStateAction<PlayerFull|undefined>>;\n    // squad:Squad\n    // setSquad:(squad:Squad) => void\n    // positions:Array<Position>\n}\n\nexport const PlayerPicker = ({allPlayers, setPlayerBeingDragged}:Props) => {\n\n    return <div className=\"player-picker\">\n        <ul>\n            {allPlayers.map(player => <li className=\"squad-player-option\" key={'player-'+player.id}><span onDragStart={e => setPlayerBeingDragged(player)} draggable=\"true\">{player.firstName + ' ' + player.lastName}</span></li> )}\n        </ul>\n    </div>\n\n}","/home/ed/code/jababira/src/components/MatchMaker/MatchMaker.tsx",["90","91"],"/home/ed/code/jababira/src/components/MatchMaker/MatchMakerCard.tsx",["92","93"],"/home/ed/code/jababira/src/components/Common/Card.tsx",[],"/home/ed/code/jababira/src/components/Common/Dropzone.tsx",[],"/home/ed/code/jababira/src/components/Common/Slider.tsx",[],"/home/ed/code/jababira/src/models/mappers.ts",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":23},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"98","severity":1,"message":"104","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":16},{"ruleId":"98","severity":1,"message":"105","line":3,"column":18,"nodeType":"100","messageId":"101","endLine":3,"endColumn":26},{"ruleId":"98","severity":1,"message":"106","line":3,"column":28,"nodeType":"100","messageId":"101","endLine":3,"endColumn":33},{"ruleId":"98","severity":1,"message":"107","line":3,"column":35,"nodeType":"100","messageId":"101","endLine":3,"endColumn":46},{"ruleId":"98","severity":1,"message":"108","line":1,"column":43,"nodeType":"100","messageId":"101","endLine":1,"endColumn":52},{"ruleId":"98","severity":1,"message":"109","line":17,"column":29,"nodeType":"100","messageId":"101","endLine":17,"endColumn":47},{"ruleId":"98","severity":1,"message":"108","line":1,"column":43,"nodeType":"100","messageId":"101","endLine":1,"endColumn":52},{"ruleId":"98","severity":1,"message":"110","line":3,"column":62,"nodeType":"100","messageId":"101","endLine":3,"endColumn":71},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'isMakingTeams' is assigned a value but never used.","Identifier","unusedVar",["111"],["112"],"'Player' is defined but never used.","'Position' is defined but never used.","'Squad' is defined but never used.","'SquadPlayer' is defined but never used.","'useEffect' is defined but never used.","'createMatchResults' is assigned a value but never used.","'VenueType' is defined but never used.","no-global-assign","no-unsafe-negation"]